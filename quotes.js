window.quotes = [{"text":"0. Программирование сегодня — это гонка разработчиков программ, стремящихся писать программы с большей и лучшей идиотоустойчивостью, и вселенной, которая пытается создать больше отборных идиотов. Пока вселенная побеждает.","author":"Rick Cook"},{"text":"1. Низкоуровневый язык — это когда требуется внимание к вещам, которые никак не связаны с программами на этом языке.","author":"Alan J. Perlis"},{"text":"2. Программирование на С похоже на быстрые танцы на только что отполированном полу людей с острыми бритвами в руках.","author":"Waldi Ravens"},{"text":"3. Не волнуйтесь, если что-то не работает. Если бы всё работало, вас бы уволили.","author":"Mosher’s Law of Software Engineering"},{"text":"4. Для меня долгое время было загадкой, как что-то очень дорогое и технологичное может быть столь бесполезным. И вскоре я осознал, что компьютер — это глупая машина, обладающая способностями выполнять невероятно умные вещи, тогда как программисты — это умные люди, у которых талант делать невероятные глупости. Короче, они нашли друг друга.","author":"Bill Bryson"},{"text":"5. В хорошем дизайне добавление чего-то стоит дешевле, чем сама эта вещь.","author":"Thomas C. Gale"},{"text":"6. В теории, теория и практика неразделимы. На практике это не так.","author":"Yoggi Berra"},{"text":"7. Perl — это тот язык, который одинаково выглядит как до, так и после RSA шифрования.","author":"Keith Bostic"},{"text":"8. Я изобрел понятие «объектно-ориентированный», и могу заявить, что не имел в виду C++.","author":"Alan Kay"},{"text":"9. Иногда лучше остаться спать дома в понедельник, чем провести всю неделю в отладке написанного в понедельник кода.","author":"Christopher Thompson"},{"text":"10. Измерять продуктивность программиста подсчетом строк кода — это так же, как оценивать постройку самолета по его весу.","author":"Bill Gates"},{"text":"11. Отладка кода вдвое сложнее, чем его написание. Так что если вы пишете код настолько умно, насколько можете, то вы по определению недостаточно сообразительны, чтобы его отлаживать.","author":"Brian W. Kernighan"},{"text":"12. Многие из вас знакомы с достоинствами программиста. Их всего три, и разумеется это: лень, нетерпеливость и гордыня.","author":"Larry Wall"},{"text":"13. Большинство программ на сегодняшний день подобны египетским пирамидам из миллиона кирпичиков друг на друге и без конструктивной целостности — они просто построены грубой силой и тысячами рабов.","author":"Alan Kay"},{"text":"14. Большинство хороших программистов делают свою работу не потому, что ожидают оплаты или признания, а потому что получают удовольствие от программирования.","author":"Linus Torvalds"},{"text":"15. Всегда пишите код так, будто сопровождать его будет склонный к насилию психопат, который знает, где вы живете.","author":"Martin Golding"},{"text":"16. Программы должны писаться для людей, которые будут их читать, а машины, которые будут эти программы исполнять — второстепенны.","author":"Harold Abelson"},{"text":"17. Люди, которые думают, что ненавидят компьютеры, на самом деле ненавидят плохих программистов.","author":"Larry Niven"},{"text":"18. Если вы дадите человеку программу, то займете его на один день. Если вы научите человека программировать, то займете его на всю жизнь.","author":"Waseem Latif"},{"text":"19. Язык, который не меняет вашего представления о программировании, недостоин изучения.","author":"Alan J. Perlis"},{"text":"20. Мы наблюдаем общество, которое все больше зависит от машин, но при этом использует их все неэффективнее.","author":"Douglas Rushkoff"},{"text":"21. Иногда лучшие программы создаются на бумажке. Запрограммировать их — второстепенная вещь.","author":"Max Kanat-Alexander"},{"text":"22. Отладка кода — это как охота. Охота на баги.","author":"Amit Kalantri"},{"text":"23. Любой дурак сможет написать код, который поймет машина. Хорошие программисты пишут код, который сможет понять человек.","author":"Martin Fowler"},{"text":"24. Программирование — это разбиение чего-то большого и невозможного на что-то маленькое и вполне реальное.","author":"Jazzwant"},{"text":"25. Программисты — не математики, как бы нам этого ни хотелось.","author":"Richard P. Gabriel"},{"text":"26. Программирование — это сложно. Основные правила, на которых все строится, очень просты, но по мере разработки программа сама начинает вводить свои правила и законы. Таким образом, программист строит лабиринт, в котором сам же может и потеряться.","author":"Marijn Haverbeke"},{"text":"27. Функции, которые производят значения, легче комбинировать новыми способами, чем те, которые производят сайд-эффекты.","author":"Marijn Haverbeke"},{"text":"28. Простота — залог надежности.","author":"Edsger W. Dijkstra"},{"text":"29. Если вы хотите, чтобы код было легко и быстро писать — делайте его удобным для чтения.","author":"Robert C. Martin"},{"text":"30. Если вы хорошо отлаживаете программы, значит, вы провели много времени, делая это. Я не хочу уметь хорошо отлаживать программы.","author":"Michael C. Feathers"},{"text":"31. Работает? Не трогай.","author":"Любой программист"},{"text":"32. При помощи C вы легко можете выстрелить себе в ногу. При помощи C++ это сделать сложнее, но если это произойдёт, вам оторвёт всю ногу целиком.","author":"Bjarne Stroustrup"},{"text":"33. Последние нововведения в C++ были созданы, чтобы исправить предыдущие нововведения.","author":"David Jameson"},{"text":"34. Java — это C++, из которого убрали все пистолеты, ножи и дубинки.","author":"James Gosling"},{"text":"35. Если бы в Java действительно работала сборка мусора, большинство программ бы удаляли сами себя при первом же запуске.","author":"Robert Sewell"},{"text":"36. Есть всего два типа языков программирования: те, на которые люди всё время ругаются, и те, которые никто не использует.","author":"Bjarne Stroustrup"},{"text":"37. Плохое имя метода сродни предвыборным обещаниям политиков. Вроде о чем-то оно говорит, но если задуматься — непонятно о чем.","author":"C. MacConnell"},{"text":"38. Неработающая программа обычно приносит меньше вреда, чем работающая плохо.","author":"Dave Thomas"},{"text":"39. Насколько проще было бы писать программы, если бы не заказчики.","author":"R. S. Martin"},{"text":"40. Молодые специалисты не умеют работать, а опытные специалисты умеют не работать.","author":"Alexander Golov"},{"text":"41. Почаще задавайте себе вопрос «Что мне скрыть?» и вы удивитесь, сколько проблем проектирования растает на ваших глазах.","author":"C. MacConnell"},{"text":"42. Преждевременная оптимизация — корень всех зол.","author":"Donald Knuth"},{"text":"43. Чтобы написать чистый код, мы сначала пишем грязный код, а затем рефакторим его.","author":"Robert Martin"},{"text":"44. Помимо математических способностей, жизненно важным качеством программиста является исключительно хорошее владение родным языком.","author":"Edsger W. Dijkstra"},{"text":"45. Для каждой сложной задачи существует решение, которое является быстрым, простым и неправильным.","author":"H. L. Mencken"},{"text":"46. Механизмы управления доступом в С++ обеспечивают защиту от несчастного случая, но не от мошенников.","author":"Bjarne Stroustrup"},{"text":"47. Думаю, искусство программировать немногим сложнее других человеческих навыков. Программирование делает вас лучше точно так же, как вам помогают развиваться изучение иностранного языка, математики или чтение книг.","author":"Jack Dorsey"},{"text":"48. Аналогично тому, как написание картины является искусством для души, так и написание программы является искусством для разума.","author":"Volnik"},{"text":"49. Тестирование не позволяет обнаружить такие ошибки, как создание не того приложения.","author":"Steve McConnell"},{"text":"50. Некоторые люди во время решения некой проблемы думают: «Почему бы мне не использовать регулярные выражения?». После этого у них уже две проблемы…","author":"Jamie Zawinski"},{"text":"51. Я не умею делать скриншоты, потому что я обычно работаю на компьютере в текстовом режиме.","author":"Richard Stallman"},{"text":"52. Ходить по воде и разрабатывать программы, следуя спецификации, очень просто… если они заморожены.","author":"Edward V Berard"},{"text":"53. Я думаю, что Microsoft назвал технологию .NET для того, чтобы она не показывалась в списках директорий Unix.","author":"Oktal"},{"text":"54. Учитывая текущее плачевное состояние наших программ, можно сказать, что программирование определенно всё ещё черная магия, и пока мы не можем называть его технической дисциплиной.","author":"Bill Clinton"},{"text":"55. Намного легче портировать шелл, чем скрипт на шелле.","author":"Larry Wall"},{"text":"56. Изучение программирования имеет такое же отношение к проектированию интерактивных систем, как обучение слепой печати к написанию стихов.","author":"Ted Nelson"},{"text":"57. Сначала учите науку программирования и всю теорию. Далее выработайте свой программистский стиль. Затем забудьте всё и просто программируйте.","author":"George Carrette"},{"text":"58. Трудность работы с программистом заключается в том, что вы не можете понять, что он делает, до тех пор, пока не стало слишком поздно.","author":"Seymour Cray"},{"text":"59. Меня два раза спрашивали [члены Парламента]: «Скажите на милость, мистер Бэббидж, что случится, если вы введёте в машину неверные цифры? Cможем ли мы получить правильный ответ?» Я не могу себе даже представить, какая путаница в голове может привести к подобному вопросу.","author":"Charles Babbage"},{"text":"60. С имеет мощь ассемблера и удобство… ассемблера.","author":"Dennis Ritchie"},{"text":"61. UNIX невероятно прост, но нужно быть гением, чтобы понять эту простоту.","author":"Dennis Ritchie"},{"text":"62. Нельзя доверять коду, который вы не написали полностью сами.","author":"Ken Thompson"},{"text":"63. Ограничение возможностей языка с целью предотвращения программистских ошибок в лучшем случае опасно.","author":"Bjarne Stroustrup"},{"text":"64. Если вы считаете, что С++ труден, попытайтесь выучить английский.","author":"Bjarne Stroustrup"},{"text":"65. Что бы нового мы ни создавали, мы должны дать людям возможность переходить от старых инструментов и идей к новым.","author":"Bjarne Stroustrup"},{"text":"66. Небольшие программы случайно компилируются и выполняются правильно при первой же попытке. Но если это происходит с любой не тривиальной программой, то это очень и очень подозрительно.","author":"Bjarne Stroustrup"},{"text":"67. Модульность — фундаментальный аспект всех успешно работающих крупных систем.","author":"Bjarne Stroustrup"},{"text":"68. Доказательство с помощью аналогий — это обман.","author":"Bjarne Stroustrup"},{"text":"69. Программа, которая не тестировалась, не является рабочей.","author":"Bjarne Stroustrup"},{"text":"70. Программирование — это не наука, а ремесло.","author":"Richard Stallman"},{"text":"71. Люди думают, что безопасность — это существительное, что-то, что можно купить. На самом же деле безопасность — это абстрактное понятие, как счастье.","author":"James Gosling"},{"text":"72. Если бы меня попросили выбрать какой-нибудь современный язык на замену Java, я бы выбрал Scala.","author":"James Gosling"},{"text":"73. Проблема С++ в том, что необходимо узнать всё о нём перед тем, как начать писать на нём все что угодно.","author":"Larry Wall"},{"text":"74. Дизайн языка программирования — это как прогулка по парку. Парку Юрского Периода.","author":"Larry Wall"},{"text":"75. Думаю, это будет новой фичей. Только не говорите никому, что она возникла случайно.","author":"Larry Wall"},{"text":"76. Тяжело улучшать код, который до этого уже улучшали много раз.","author":"Larry Wall"},{"text":"77. Лень — главное достоинство программиста.","author":"Larry Wall"},{"text":"78. Чтобы понять алгоритм, нужно его увидеть.","author":"Donald Knuth"},{"text":"79. У меня предчувствие, что неизвестные цепочки ДНК расшифруются в копирайты и патенты.","author":"Donald Knuth"},{"text":"80. Если вы наслаждаетесь используемыми инструментами, то работа будет выполнена успешно.","author":"Donald Knuth"},{"text":"81. Помните, что обычно есть решение проще и быстрее того, что первым приходит вам в голову.","author":"Donald Knuth"},{"text":"82. Если оптимизировать всё, что можно, то вы будете вечно несчастным.","author":"Donald Knuth"},{"text":"83. Алгоритм Евклида — дед всех алгоритмов, потому что это старейший нетривиальный алгоритм, доживший до наших дней.","author":"Donald Knuth"},{"text":"84. Легче изобрести будущее, чем предсказать его.","author":"Alan Kay"},{"text":"85. Программированию обычно учат на примерах.","author":"Niklaus Wirth"},{"text":"86. Программы становятся медленнее быстрее, чем «железо» становится быстрее.","author":"Niklaus Wirth"},{"text":"87. Я называю это моей ошибкой на миллиард. Изобретение нулевого указателя (null — прим. ред.) в 1965.","author":"Tony Hoare"},{"text":"88. Некоторые проблемы лучше не решать, а избегать.","author":"Tony Hoare"},{"text":"89. Одно аккуратное измерение стоит тысячи мнений экспертов.","author":"Grace Hopper"},{"text":"90. У людей аллергия на перемены.","author":"Grace Hopper"},{"text":"91. Мы не можем перекладывать свои ошибки на используемые технологии.","author":"Tim Berners-Lee"},{"text":"92. Лень — естественное состояние программиста, после которого он рождает хороший алгоритм.","author":"Народное творчество"},{"text":"93. Магия перестаёт существовать после того, как вы понимаете, как она работает.","author":"Tim Berners-Lee"},{"text":"94. Программирование — это как бить себя по лицу: рано или поздно ваш нос будет кровоточить.","author":"Kyle Woodbury"},{"text":"95. Способ использования интеллекта важнее, чем его уровень.","author":"C. MacConnell"},{"text":"96. Компьютер позволяет нам совершать ошибки гораздо быстрее, чем любые другие изобретения человечества, за исключением, пожалуй, текилы и оружия.","author":"Mitch Radcliffe"},{"text":"97. 640 Кб должно хватить для любых задач.","author":"Bill Gates"},{"text":"98. Основная проблема программистов состоит в том, что их ошибки невозможно предугадать.","author":"Seymour Cray"},{"text":"99. Два самых известных продукта, созданных в Университете Беркли — это UNIX и LSD. Это не может быть просто совпадением.","author":"Jeremy S. Anderson"}]